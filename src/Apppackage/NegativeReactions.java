/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Apppackage;

import javax.swing.*;
import java.sql.*;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartFrame;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.renderer.category.BarRenderer;
import org.jfree.data.general.*;
import org.jfree.data.jdbc.JDBCCategoryDataset;
import net.proteanit.sql.DbUtils;




/**
 *
 * @author Eigenaar
 */
public class NegativeReactions extends javax.swing.JFrame {

    static Statement mijnStat;
    public Connection con;
    String user = "barba";
    String password = "Ruggenmerg";
    
    /**
     * Creates new form NegativeReactions
     */
    public NegativeReactions() {
        initComponents();
        String connectionUrl = "jdbc:mysql://localhost/barbawapatest";
        String driver = "com.mysql.jdbc.Driver";
        try{
             

        //Class.forName(driver);
        try {
            con = DriverManager.getConnection(connectionUrl, "root", "root");
            mijnStat = con.createStatement();
        } catch (SQLException ex) {
            Logger.getLogger(Table.class.getName()).log(Level.SEVERE, null, ex);
        }
            //create connection
           
            Statement state = con.createStatement();
            ResultSet rs = state.executeQuery("select * from fbnegative");
            ResultSetMetaData rsmdata = rs.getMetaData();
            //store column numbers
            int columns = rsmdata.getColumnCount();
            //set data into Jtable
            DefaultTableModel dtm = new DefaultTableModel();
            Vector columns_name = new Vector();
            Vector data_rows = new Vector();
            
            for (int i=1; i<columns; i++)
            {
                columns_name.addElement(rsmdata.getColumnName(i));
            }
            dtm.setColumnIdentifiers(columns_name);
            
            while(rs.next())
            {
                data_rows = new Vector();
                for(int j=1; j<columns; j++)
                {
                    data_rows.addElement(rs.getString(j));
                }
                dtm.addRow(data_rows);                
            }
            //pass default table object over into jtable
            fbNegT.setModel(dtm);
        } catch (SQLException ex) {
            Logger.getLogger(Table.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        backNegativeReactions = new javax.swing.JButton();
        PreviewB = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        fbNegT = new javax.swing.JTable();
        datUB = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        FileMainmenu = new javax.swing.JMenuItem();
        FileExitmenu = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        Helptipmenu = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Database manager Ahoy");

        backNegativeReactions.setText("Back");
        backNegativeReactions.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backNegativeReactionsActionPerformed(evt);
            }
        });

        PreviewB.setText("Preview");
        PreviewB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PreviewBActionPerformed(evt);
            }
        });

        fbNegT.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "neg_id", "dates", "amount", "comments"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(fbNegT);
        fbNegT.getColumnModel().getColumn(0).setMaxWidth(200);
        fbNegT.getColumnModel().getColumn(1).setMaxWidth(75);
        fbNegT.getColumnModel().getColumn(2).setMaxWidth(50);

        datUB.setText("Datum/Users");
        datUB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                datUBActionPerformed(evt);
            }
        });

        jMenu1.setText("File");

        FileMainmenu.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_M, java.awt.event.InputEvent.CTRL_MASK));
        FileMainmenu.setText("Main");
        FileMainmenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FileMainmenuActionPerformed(evt);
            }
        });
        jMenu1.add(FileMainmenu);

        FileExitmenu.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F4, java.awt.event.InputEvent.ALT_MASK));
        FileExitmenu.setText("Exit");
        FileExitmenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FileExitmenuActionPerformed(evt);
            }
        });
        jMenu1.add(FileExitmenu);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Help");

        Helptipmenu.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_T, java.awt.event.InputEvent.CTRL_MASK));
        Helptipmenu.setText(" Tips");
        Helptipmenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HelptipmenuActionPerformed(evt);
            }
        });
        jMenu2.add(Helptipmenu);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addComponent(PreviewB, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(89, 89, 89)
                .addComponent(datUB)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 272, Short.MAX_VALUE)
                .addComponent(backNegativeReactions, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 688, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(315, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(backNegativeReactions, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(PreviewB, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(datUB)))
                .addContainerGap())
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(4, 4, 4)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(63, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void backNegativeReactionsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backNegativeReactionsActionPerformed
    GraphChoose graphChoose = new GraphChoose();
    graphChoose.setVisible(true);
    NegativeReactions.this.dispose();
    }//GEN-LAST:event_backNegativeReactionsActionPerformed

    private void HelptipmenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HelptipmenuActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_HelptipmenuActionPerformed

    private void FileMainmenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FileMainmenuActionPerformed
    GraphChoose graphChoose = new GraphChoose();
    graphChoose.setVisible(true);
    NegativeReactions.this.dispose();
    }//GEN-LAST:event_FileMainmenuActionPerformed

    private void FileExitmenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FileExitmenuActionPerformed
    NegativeReactions.this.dispose();
    }//GEN-LAST:event_FileExitmenuActionPerformed

    private void PreviewBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PreviewBActionPerformed
    
        try{
            String query="select dates, amount from fbnegative";
        JDBCCategoryDataset dataset = new JDBCCategoryDataset(Connect.ConnectToFbn.getConnection(),query);
        //JDBCCategoryDataset dataset = new JDBCCategoryDataset(DriverManager.getConnection("//db4free.net:3306", user, password), query);
        //JDBCCategoryDataset dataset = new JDBCCategoryDataset(Connect.Connectie.getConnection(), query);
        JFreeChart chart = ChartFactory.createLineChart("Negative Reactions", "dates", "amount", dataset, PlotOrientation.VERTICAL, false, true, true);
        BarRenderer renderer = null;
        CategoryPlot plot = null;
        renderer = new BarRenderer();
        ChartFrame frame = new ChartFrame("Negative Reactions", chart);
        frame.setVisible(true);
        frame.setSize(1000, 650);        
        }
    catch (Exception e) { 
    JOptionPane.showMessageDialog(null, e);{
        
}
    }
    
        
        /*try{
        String query="select dates, amount from negatve";
        JDBCCategoryDataset dataset = new JDBCCategoryDataset(Connect.ConnectToFb.getConnection());
        JFreeChart chart = ChartFactory.createLineChart("Negative Reactions", "dates", "amount", dataset, PlotOrientation.VERTICAL, false, true, true);
        BarRenderer renderer = null;
        CategoryPlot plot = null;
        renderer = new BarRenderer();
        ChartFrame frame = new ChartFrame("Negative Reactions", chart);
        frame.setVisible(true);
        frame.setSize(1000, 650);        
        }
    catch (Exception e) { 
    JOptionPane.showMessageDialog(null, e);
    }*/
    }//GEN-LAST:event_PreviewBActionPerformed

    private void datUBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_datUBActionPerformed
       try{
            String query="select distinct neg_id, dates from fbnegative order by neg_id";
        JDBCCategoryDataset dataset = new JDBCCategoryDataset(Connect.ConnectToFbn.getConnection(),query);
        //JDBCCategoryDataset dataset = new JDBCCategoryDataset(DriverManager.getConnection(connectionUrl, "root", "root"), query);
        JFreeChart chart = ChartFactory.createBarChart("Negative Reactions", "dates", "users", dataset, PlotOrientation.VERTICAL, false, true, true);
        BarRenderer renderer = null;
        CategoryPlot plot = null;
        renderer = new BarRenderer();
        ChartFrame frame = new ChartFrame("Amount of users", chart);
        frame.setVisible(true);
        frame.setSize(1000, 650);        
        }
    catch (Exception e) { 
    JOptionPane.showMessageDialog(null, e);{
        
}
    }
        
    }//GEN-LAST:event_datUBActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NegativeReactions.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NegativeReactions.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NegativeReactions.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NegativeReactions.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NegativeReactions().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem FileExitmenu;
    private javax.swing.JMenuItem FileMainmenu;
    private javax.swing.JMenuItem Helptipmenu;
    private javax.swing.JButton PreviewB;
    private javax.swing.JButton backNegativeReactions;
    private javax.swing.JButton datUB;
    private javax.swing.JTable fbNegT;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
